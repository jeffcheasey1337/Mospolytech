#include<iostream>
#include <iomanip>

using namespace std;
int pynkt, a, b, c, n, k, s, i, c21 = 1990, c22 = 135, c23 = 1991, c24 = 7290, c25 = 1992, c26 = 11300, c27 = 1993, c28 = 16200, c3 = 10, c91, c92, c93, c94, c95, c96,c12fun;
char c5, drob = '/', funt='163';
double b1, c6d, c6fu, c6fr, c6y;
float t7, t71, c10fu, c10sh, c10pe, c10sumst,c10sumn, c12desfun,c12deschas;
long g1= 8425785, g2=68, g3=9973, g4=4567;
int main()
{
	setlocale(LC_ALL, "ru");
	cout << "Пункты:\n" <<
		"1.Галоны в футы\n" <<
		"2.Вывод таблицы\n" <<
		"3.Генерация вывода\n" <<
		"4.Стихотворение \n" <<
		"5.функция islower() \n" <<
		"6.Биржа\n" <<
		"7.Температура\n" <<
		"8.Города\n" <<
		"9.Дроби\n" <<
		"10.Старые деньги\n" <<
		"11.Форматирование ввода\n" <<
		"12.Обратная 10 задача\n"; 
	cin >> pynkt;
	switch (pynkt)
	{
	case 1:
		
		cout << "Введите коллчисетво галлонов:"; cin >> a;
		b1 = a * 7.481;
		cout << "Эквивалентный объем в кубических футах:" << b1 << endl;
		break;
	case 2:
		
		cout << setw(10) << c21 << setw(10) << c22 << endl
			<< setw(10) << c23 << setw(10) << c24 << endl
			<< setw(10) << c25 << setw(10) << c26 << endl
			<< setw(10) << c27 << setw(10) << c28 << endl;
			break;
	case 3:
		cout << c3 << endl;
		cout << "константа" << endl;
		c3 *= 2;
		cout << c3-- << endl;
		cout << "Проведена арифметическая операция с присваиванием " << endl;
		cout << c3 << endl;
		cout << "Произошла операция декремента " << endl;
		break;
	case 4:
		//   Напишите программу, выводящую па экран ваше любимое стихотворение. Для разбиения на строчки используйте подходящую управляющую последовательность. 
		cout << "  Напишите программу, выводящую па экран ваше любимое стихотворение. Для разбиения на строчки используйте подходящую управляющую последовательность. " << endl;
		cout << " Шумел веселый маскарад- \n Чудесных образов слиянье.\n Лишь проходимец был не рад -\n Он был в ужасном состоянии...\n" << endl;
		break;
	case 5:
		// Библиотечная функция islower() принимает в качестве аргумента один символ (букву) и возвращает ненулевое целое значение в том случае, если буква является строчной, и нулевое, если буква является заглавной. Описание функции хранится в файле CTYPE.H. Напишите программу, которая принимает букву от пользователя, а затем выводит нулевое или ненулевое значение в зависимости от того, является ли буква строчной или нет. 
		cout << "Библиотечная функция islower() принимает в качестве аргумента один символ (букву) и возвращает ненулевое целое значение в том случае, если буква является строчной, и нулевое, если буква является заглавной. Описание функции хранится в файле CTYPE.H. Напишите программу, которая принимает букву от пользователя, а затем выводит нулевое или ненулевое значение в зависимости от того, является ли буква строчной или нет. " << endl;
		char c5;
		cin >> c5;
		cout << islower((char)c5) << endl;
		system("pause");
		break;
	case 6:
		//  6. На биржевых торгах за 1 фунт стерлингов давали $1.487, за франк — $0.172. за немецкую марку — $0.584, а за японскую йену — $0.00955. Напишите программу, которая запрашивает денежную сумму в долларах, а затем выводит эквивалентные суммы в других валютах. 
		cout << "На биржевых торгах за 1 фунт стерлингов давали $1.487, за франк — $0.172. за немецкую марку — $0.584, а за японскую йену — $0.00955. Напишите программу, которая запрашивает денежную сумму в долларах, а затем выводит эквивалентные суммы в других валютах. " << endl;
		c6fu = 1.487;
		c6fr = 0.172;
		c6y = 0.00955;

		cout << "Введите сумму в долларах: "; cin >> c6d;
		cout << "В долларах:" << c6d << endl;
		cout << "Доллар/Фунт:" << c6d / 1.487 << endl;
		cout << "Доллар/Франк:" << c6d / 0.172 << endl;
		cout << "Доллар/Йена:" << c6d / 0.00955 << endl;
		
		break;
	case 7:
		//  Температуру, измеренную в градусах по Цельсию, можно перевести в градусы по Фаренгейту путем умножения на 9/5 и сложения с числом 32. Напишите программу, запрашивающую температуру в градусах по Цельсию и отображающую ее эквивалент по Фаренгейту. 
		cout <<"Температуру, измеренную в градусах по Цельсию, можно перевести в градусы по Фаренгейту путем умножения на 9/5 и сложения с числом 32. Напишите программу, запрашивающую температуру в градусах по Цельсию и отображающую ее эквивалент по Фаренгейту.  "<< endl;

		cout << "Введите по Цельсию:"; cin >> t7;
		t71 = t7 * 9 / 5 + 32;
		cout << t71 << endl;
		break;

	case 8:
		// Когда размер величины, выводимой на экран с помощью манипулятора setw(), оказывается меньше размера зарезервированного поля, по умолчанию незаполненные поля заполняются пробелами. Манипулятор setfill() принимает в качестве аргумента один символ, который замещает все пробелы на незаполненных позициях поля. Модифицируйте пример 2 так, чтобы символы, разделяющие пары значений из столбцов, были не пробелами, а точками, например 
		cout << "  Когда размер величины, выводимой на экран с помощью манипулятора setw(), оказывается меньше размера зарезервированного поля, по умолчанию незаполненные поля заполняются пробелами. Манипулятор setfill() принимает в качестве аргумента один символ, который замещает все пробелы на незаполненных позициях поля. Модифицируйте пример 2 так, чтобы символы, разделяющие пары значений из столбцов, были не пробелами, а точками, например  " << endl;
		
		cout << setfill('.') << setw(9) << "Город" << setw(12) 
			<< "Население" << endl
			<< setw(8) << "Москва" << setw(15) << g1 << endl
			<< setw(10) << "Сергиев Пасад" << setw(14) << g3 << endl
			<< setw(9) << "Село Гадюкино" << setw(12) << g2 << endl
			<< setw(13) << "Село Барановичи" << setw(15) << g4 <<endl;
		break;
	case 9:

		//Две дроби а/b и c/d можно сложить следующим образом:  a/b + c/d = (a*d + b*c)/(b*d)  
		
		cout << "Введите 1-ю дробь:" << endl;
		cin >> c91 >> drob >> c92;
		cout << "Введите 2-ю дробь:" << endl;
		cin >> c93 >> drob >> c94;
		c95 = c91 * c94 + c92 * c93;
		c96 = c92 * c94;
		cout <<"Сумма равна:" << c95 << drob << c96 << endl;
		break;
	case 10:
		// Устаревшая денежная система Великобритании состояла из фунтов, шил лингов и пенсов. 1 фунт был равен 20 шиллингам, а 1 шиллинг — 12 пен сам.
		cout << "Введите кол-во фунтов:" << endl;
		cin >> c10fu;
		cout << "Введите кол-во шиллингов: " << endl;
		cin >> c10sh;
		cout << "Введите кол-во пенсов: " << endl;
		cin >> c10pe;
		c10sumst = c10pe + c10sh * 12 + (c10fu * 20) * 12;
		c10sumn = (c10sumst / 2.4) / 100;
		cout << "Сумма в фунтах"<< c10sumn << endl;
		break;
	case 11:
		// По умолчанию форматирование вывода производится по правому краю поля. Можно изменить форматирование текста на левостороннее путем использования манипулятора setiosflags(ios::left) (не беспокойтесь о смысле новой формы записи, встретившейся в манипуляторе). Используйте этот манипулятор вместе с setw() для того, чтобы произвести следующий вывод:  

		cout << setiosflags(ios::left) << setw(14) << "Фамилия" << setw(14) << "Имя" << setw(22) << "Адрес" << setw(14) << "Город" << endl;
		cout << setfill('-') << setw(70) << "-" << endl;
		cout << setfill(' ') << setw(14) << "Петров" << setw(14) << "Василий" << setw(22) << "Кленовая 16" << setw(14) << "Санкт-Петербург" << endl
			<< setw(14) << "Иванов" << setw(14) << "Сергей" << setw(22) << "Осиновая 3" << setw(14) << "Находка" << endl
			<< setw(14) << "Сидоров" << setw(14) << "Иван" << setw(22) << "Березовая 21" << setw(14) << "Калининград" << endl;
		break;
	case 12:
		//  Напишите программу, выполняющую действия, обратные тем, которые описаны в упражнении 10, то есть запрашивающую у пользователя сум му, указанную в десятичных фунтах, и переводящую ее в старую систему фунтов, шиллингов и пенсов.Пример взаимодействия программы с пользователем может выглядеть так :
		cout<<"Введите число десятичных фунтов: ";
		cin>>c12desfun;
		c12fun = static_cast<int>(c12desfun);
		c12deschas = (c12desfun - c12fun) * 20;
		static_cast<int>(c12desfun);
		c12desfun = static_cast<int>((c12deschas - static_cast<int>(c12deschas)) * 12);
		cout << "Эквивалентная сумма в старой форме записи: "<<c12fun <<'.'<<static_cast<int>(c12deschas) << '.'<<c12desfun<<endl;
			break;
	default:
		break;
	}
}